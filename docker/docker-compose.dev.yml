version: "3.8"

services:
  app:
    container_name: backend-template-app # Rename as needed
    build:
      context: ../ # relative to this file
      dockerfile: docker/Dockerfile.dev # relative to the build context
    volumes:
      - ../:/app:delegated
      - /app/node_modules
    env_file:
      - .env # relative to this file
    ports:
      - "${PORT}:${PORT}" # Map port host:container
    environment:
      - NODE_ENV=development
      - PORT=${PORT}
      - POSTGRES_HOST=postgres_db # Use service name instead of localhost
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - MONGODB_HOST=mongo_db # Use service name instead of localhost
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_DATABASE=${MONGODB_DATABASE}
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - REDIS_HOST=redis_cache # Use service name instead of localhost
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      mongo_db:
        condition: service_healthy
      postgres_db:
        condition: service_healthy
      redis_cache:
        condition: service_healthy
    command: /bin/sh -c "npm run start" 
    user: node
    restart: unless-stopped
    networks:
      - app-network

  postgres_db:
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}" 
    user: "${POSTGRES_USER}"
    volumes:
      - pgdata:/var/lib/postgresql/data # Where Postgres stores its data by default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  mongo_db:
    image: mongo:latest
    env_file:
      - .env
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    volumes:
      - mongodb_data:/data/db # Where MongoDB stores its data by default
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGODB_DATABASE}
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--authenticationDatabase=admin",
          "-u",
          "${MONGODB_USER}",
          "-p",
          "${MONGODB_PASSWORD}",
          "--eval",
          "db.runCommand('ping').ok",
          "--quiet",
        ]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

  redis_cache:
    image: redis:latest
    env_file:
      - .env
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data # Where Redis stores its data by default
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  mongodb_data:
  redis_data:
